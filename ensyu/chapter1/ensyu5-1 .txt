演習5-1　結合が先か、集約が先か

【問題文】
「クロス表で入れ子の表側を作る」（P.87）では、集約してDATAビューとMASTERビューの対応を一対一にしてから結合を行いました。これはこれで分かりやすい方法ですが、パフォーマンスを考慮するならば、中間ビューを二つ作るのは無駄が多い方法です。
そこで、この中間ビューをなるべく減らすように、コードを改良してください。

P.87内容
■年齢階級マスタ
SELECT * FROM TblAge;
 age_class | age_range
-----------+-----------
 1         | 21～30歳
 2         | 31～40歳
 3         | 41～50歳
(3 行)

■性別マスタ
SELECT * FROM TblSex;


■人口構成テーブル
SELECT * FROM TblPop;
 pref_name | age_class | sex_cd | population
-----------+-----------+--------+------------
 秋田      | 1         | m      |        400
 秋田      | 3         | m      |       1000
 秋田      | 1         | f      |        800
 秋田      | 3         | f      |       1000
 青森      | 1         | m      |        700
 青森      | 1         | f      |        500
 青森      | 3         | f      |        800
 東京      | 1         | m      |        900
 東京      | 1         | f      |       1500
 東京      | 3         | f      |       1200
 千葉      | 1         | m      |        900
 千葉      | 1         | f      |       1000
 千葉      | 3         | f      |        900
(13 行)


■クロス表作成SQL
SELECT
  MASTER.age_class AS age_class,
  MASTER.sex_cd    AS sex_cd,
  DATA.pop_tohoku  AS pop_tohoku,
  DATA.pop_kanto   AS pop_kanto
FROM
  (SELECT
     age_class,
     sex_cd,
     SUM(CASE WHEN pref_name IN ('青森', '秋田')
              THEN population ELSE NULL END) AS pop_tohoku,
     SUM(CASE WHEN pref_name IN ('東京', '千葉')
              THEN population ELSE NULL END) AS pop_kanto
   FROM TblPop
   GROUP BY age_class, sex_cd) DATA
     RIGHT OUTER JOIN
       (SELECT age_class, sex_cd
          FROM TblAge 
                CROSS JOIN
               TblSex ) MASTER
     ON  MASTER.age_class = DATA.age_class
    AND  MASTER.sex_cd    = DATA.sex_cd;

■実行結果
 age_class | sex_cd | pop_tohoku | pop_kanto
-----------+--------+------------+-----------
 1         | f      |       1300 |      2500
 2         | f      |            |
 3         | f      |       1800 |      2100
 1         | m      |       1100 |      1800
 2         | m      |            |
 3         | m      |       1000 |
(6 行)


【解答】
■SQL
SELECT MASTER.age_class AS age_class
       , MASTER.sex_cd AS sex_cd
       , SUM(CASE WHEN pref_name IN ('青森', '秋田')
                THEN population ELSE NULL END) AS pop_tohoku
       , SUM(CASE WHEN pref_name IN ('東京', '千葉')
                THEN population ELSE NULL END) AS pop_kanto
  FROM (SELECT age_class, sex_cd
          FROM TblAge CROSS JOIN TblSex) MASTER
        LEFT OUTER JOIN TblPop DATA
    ON MASTER.age_class = DATA.age_class
   AND MASTER.sex_cd = DATA.sex_cd
 GROUP BY MASTER.age_class, MASTER.sex_cd;

■実行結果
 age_class | sex_cd | pop_tohoku | pop_kanto
-----------+--------+------------+-----------
 1         | f      |       1300 |      2500
 1         | m      |       1100 |      1800
 2         | f      |            |
 2         | m      |            |
 3         | f      |       1800 |      2100
 3         | m      |       1000 |
(6 行)


